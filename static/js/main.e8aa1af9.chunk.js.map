{"version":3,"sources":["sections/Nav/main.tsx","sections/Content/ContentData.tsx","sections/Content/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Nav","Body","Logo","FireFoxIcon","Title","TitleLeft","Links","ListItem","SearchIcon","styled","div","h4","span","ul","li","SearchAlt","Firefox","ContentData","data","title","subTitle","image","videoLink","text","console","log","theme","Top","SubTitle","Text","More","MoreVideo","PlayVideoIcon","MoreInfo","Bottom","h1","PlayCircle","Content","CustomTabs","CustomTabList","map","d","i","CustomTab","key","Dot","CustomTabPanel","Tabs","TabList","Tab","selected","TabPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8aa1af9.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { SearchAlt } from '@styled-icons/boxicons-regular'\nimport { Firefox } from '@styled-icons/boxicons-logos/Firefox'\nexport const Nav: React.FC<{}> = () => {\n  return (\n    <Body>\n      <Logo><FireFoxIcon /></Logo>\n      <Title><TitleLeft>WILD</TitleLeft>NATURE</Title>\n      <Links>\n        <ListItem>Species</ListItem>\n        <ListItem>Location</ListItem>\n        <ListItem>Lections</ListItem>\n        <ListItem>Donate</ListItem>\n        <ListItem><SearchIcon /></ListItem>\n      </Links>\n    </Body>\n  )\n}\n\nconst Body = styled.div`\ndisplay : flex;\nalign-items : center;\njustify-content:space-between;\nz-index:99;\nposition:absolute;\nleft:0px;\nright:0;\nmargin-top:20px;\n`\nconst Title = styled.h4`\nfont-size:18px;\nflex:3;\ncolor:white;\ncursor: pointer;\n`\nconst TitleLeft = styled.span`\ncolor:#F3912A;\n`\n\nconst Links = styled.ul`\nlist-style:none;\ndisplay : flex;\nalign-items : center;\njustify-content:space-around;\nflex:1;\nmargin-right:50px;\n`\nconst ListItem = styled.li`\ncolor:white;\nopacity:0.5;\nmargin : 0 10px;\nfont-size:12px;\ncursor: pointer;\n&:hover {\n    opacity:0.9;\n  }\n`\nconst SearchIcon = styled(SearchAlt)`\n  color: white;\n  width:20px\n`\nconst Logo = styled.div`\nwidth:50px;\nheight:100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nmargin-right:50px;\n`\nconst FireFoxIcon = styled(Firefox)`\nwidth:30px;\nbackground:white;\ncolor:#F39129;\nborder-radius:5px;\ncursor: pointer;\n`","import React from 'react'\nimport styled from 'styled-components';\nimport { PlayCircle } from '@styled-icons/boxicons-regular/PlayCircle'\n\ntype DataType = {\n  title: string;\n  subTitle: string;\n  videoLink: string;\n  image: string;\n  text: string\n}\nexport const ContentData = ({ data }: { data: DataType }) => {\n  const { title, subTitle, videoLink, image, text } = data;\n  console.log(data)\n  return (\n    <Body theme={image}>\n      <Top>\n        <SubTitle>\n          {subTitle}\n        </SubTitle>\n        <Title>\n          {title}\n        </Title>\n        <Text>\n          {text}\n        </Text>\n        <More>\n          <MoreVideo>\n            <PlayVideoIcon />\n            Watch Video\n          </MoreVideo>\n          <MoreInfo>\n            More Info\n          </MoreInfo>\n        </More>\n      </Top>\n      <Bottom>\n        bottom\n      </Bottom>\n    </Body>\n  )\n}\nconst Body = styled.div`\nheight:100%;\nwidth:100%;\nbackground-image: url(${({ theme }) => theme});\nbackground-repeat:no-repeat;\nbackground-position:center;\nbackground-size:cover;\ndisplay:flex;\nalign-items:flex-start;\njustify-content:flex-end;\nflex-direction:column;\nposition:relative;\n&::after{\n  content:'';\n  position:absolute;\n  top:0;\n  left:0;\n  display:block;\n  width:100%;\n  height:100%;\n  background-color:black;\n  opacity:0.5;\n  z-index:3\n}\n`\nconst Top = styled.div`\nz-index:5;\ncolor:white;\npadding:20px;\ntext-transform: uppercase;\nwidth:30%;\n@media(max-width: 767px){\n    width:100%;\n  }\n`\nconst Title = styled.h1`\nmargin: 15px 0;\n\n`\nconst SubTitle = styled.div`\n\n`\nconst Text = styled.div`\ntext-transform: none;\n`\nconst More = styled.div`\nmargin-top:15px;\ndisplay:flex;\nalign-items:center;\njustify-content:space-between;\ntext-transform:none;\nfont-size:12px;\n`\nconst MoreVideo = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`\nconst PlayVideoIcon = styled(PlayCircle)`\nbackground-color:#F39129;\ncolor:white;\nborder-radius:50%;\nwidth:30px;\npadding:0;\nmargin-right:20px;\n&:last-child :first-child{\n  fill:#F39129;\n};\n&:last-child :last-child{\n  width:30px;\n}\n`\nconst MoreInfo = styled.div``\nconst Bottom = styled.div`\n\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { ContentData } from './ContentData'\ntype DataType = {\n  title: string;\n  subTitle: string;\n  videoLink: string;\n  image: string;\n  text: string\n}\n\nexport const Content = ({ data }: { data: DataType[] }) => {\n  return (\n    <Body>\n      <CustomTabs>\n        <CustomTabList>\n          {data.map((d, i) => <CustomTab key={i}><Dot /></CustomTab>)}\n        </CustomTabList>\n        {data.map((d, i) => <CustomTabPanel key={i}><ContentData data={d} /></CustomTabPanel>)}\n      </CustomTabs>\n    </Body>\n  )\n}\nconst Body = styled.div`\nheight:100%;\nposition:absolute;\ntop:0;\nleft:0;\nright:0;\nz-index:1;\n`\nconst CustomTabs = styled(Tabs)`\ndisplay:flex;\nheight:100%;\n`\nconst CustomTabList = styled(TabList)`\nheight:100%;\nbackground:#F39129;\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\njustify-content:center;\nposition:relative;\nwidth:50px;\nlist-style:none\n`\nconst CustomTab = styled(Tab)`\npadding:5px;\nborder-radius:50%;\nmargin-bottom:5px;\nopacity: ${({ selected }) => selected ? 1 : 0.5};\n\n`\nconst Dot = styled.div`\nheight:10px;\nwidth:10px;\nbackground:white;\nborder-radius:50%;\ncursor: pointer;\n`\nconst CustomTabPanel = styled(TabPanel)`\nflex: ${({ selected }) => selected ? 1 : 0};\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`\n","import React from 'react';\nimport './App.css';\nimport { Nav, Content } from './sections'\nimport styled from 'styled-components';\nconst data = [\n  {\n    title: 'American fox',\n    subTitle: 'Species of america',\n    text: 'The American red fox , commonly known as the eastern American red fox, is a North American subspecies of the red fox (Vulpes vulpes). Historically, red foxes were classified as two species: Vulpes vulpes in Eurasia and Vulpes fulva in the Americas (Tesky, 1995).',\n    image: 'https://images.unsplash.com/photo-1540153448870-af780343526e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',\n    videoLink: 'https://youtu.be/RCqQYpM1hCA'\n  },\n  {\n    title: 'White-tailed deer',\n    subTitle: 'Species of america',\n    text: 'The white-tailed deer (Odocoileus virginianus), also known as the whitetail or Virginia deer, is a medium-sized deer native to North America, Central America, Ecuador',\n    image: 'https://images.unsplash.com/photo-1484406566174-9da000fda645?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=935&q=80',\n    videoLink: 'https://www.youtube.com/watch?v=F8eCgl6JG7k'\n  }\n]\nfunction App() {\n  return (\n    <Body>\n      <Content data={data} />\n      <Nav />\n    </Body>\n  );\n}\n\nexport default App;\n\nconst Body = styled.div`\nheight:100vh;\nposition:relative;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}